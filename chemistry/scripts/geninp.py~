#!/usr/bin/env python

import os
import matplotlib
import matplotlib.pyplot as plt
import optparse, time
import numpy as N
import pdb as pdb
from scipy import *
from matplotlib.mlab import griddata
from matplotlib import rc
from matplotlib import rcParams
from pylab import *
from subprocess import call
import fnmatch
import shutil

##################################################################################
# Incorporate additional gas temperature and CR information into environment files.
# This code will expect that the UV file is in the main disk chemistry directory and 
# that the environment file contains a copy of the relevant gas_Model.out file. 
#
# The script can also produce 0io files and copy into all relevant directories.

# Location of disk chemical model:
diskchem_dir = '/Nirgal1/kamberrs/disk_chemistry/MasterChemistry'

#cp -r /Nirgal1/kamberrs/torus/environ/Ms2.2Md0.0* .

# Name(s) of torus environment output:
mass = ['0.03Ms']
lg = [0.0,0.9,0.99,0.9,0.9,0.9,0.9,0.0,0.9,0.9,0.99,0.99,0.99]
Routmm = [200.0,200.0,200.0,200.0,158.0,123.0,60.0,200.0,200.0,158.0,158.0,123.0,60.0]
in2d = [0,1,1,0,1,1,1,0,1,1,1,1,1]

drift = True
#lg = ['lg_0.9m','lg_0.675m','lg_0.45m','lg_0.225m','lg_0.0m']
#lg = ['lg_0.45m','lg_0.225m','lg_0.0m']
#srt_time_vals = ['2.0E+06','1.5E+06','1.0E+06','5.0E+05','None']
srt_time_vals = ['1.000D-00','5.001D+05','1.501D+06','1.000D-00','1.321D+06','2.151D+06','2.971D+06','1.000D-00','5.001D+05','1.321D+06','1.501D+06','2.151D+06','2.971D+06']#,'None']
end_time_vals = ['5.000D+05','1.500D+06','6.000D+06','1.320D+06','2.150D+06','2.970D+06','6.000D+06','5.001D+05','1.320D+06','1.500D+06','2.146D+06','2.970D+06','6.000D+06']


for m in range(len(mass)):
	for l in range(len(lg)):
		dest = diskchem_dir+"/store_inp/"+mass[m]+"_"+lg[l]+"_"+Routmm[l]+"/"
		oldpath = os.path.exists(dest)
		if oldpath == False:
			os.makedirs(dest)
		f = open(dest+"/2times.inp","w+")
		f.write("# Time steps:\n")
		f.write(end_time_vals[l]"              #last time step (yr),\n")
		f.write(srt_time_vals[l]"              #first time step (yr),\n")
		f.write("90                     #total amount of time steps\n")
		f.close()
		f2 = open(dest+"/5flags.inp","w+")
		f.write("###############################################\n")
		f.write("# Parameters\n")
		f.write("#################################################\n")

		


